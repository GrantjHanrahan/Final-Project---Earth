
<link rel="stylesheet" href="https://js.arcgis.com/4.6/esri/css/main.css">
<script src="https://js.arcgis.com/4.6/"></script>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top" id="mainNav">
  <div class="container">
    <ul class="navbar-nav ml-auto" id="main">
    <li class="nav-item"><%= link_to 'Home ', pages_home_path %></li>
    <!-- <li class="nav-item"><%= link_to ' Wildlife', pages_wildlife_path %></li> -->

    <li class="nav-item" id="e"><%= link_to 'Earth', users_show_path %></li>
  </ul>

    <div class="collapse navbar-collapse" id="navbarResponsive">
      <ul class="navbar-nav ml-auto">
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="#one">One</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="#two">Two</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="#three">Three</a>
        </li>
        <li class="nav-item">
          <a class="nav-link js-scroll-trigger" href="#four">Four</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

<div class="parallax">

  <div class="jumbotron text-center">
    <h1>&lt;/waste&gt;</h1>
  </div>

  <section class="smallSect" id="facts1">



  </section>

  <section class="container" id="one">
    <%= image_tag 'infoWaste.jpg'%>

  </section>


  <section id="airQualityMap">
    <div class="container">
    </div>
  </section>

  <section class="smallSect" id="facts2">


  </section>

  <section id="oceanTemp">
    <!-- <div class="container">

    </div> -->
  </section>



  <section class="bg-dark" id="seaStats">
    <div class="container">
      <div class="row">
        <div class="col-2">
          <h5>By 2050 an estimated <strong>99%</strong> of seabirds will have ingested plastic</h5>
          <!-- <small>#CleanSeas UN Environment</small> -->
          <br>
          <h5>Every year <strong>8 Million metric tons</strong> of plastic goes into the ocean</h5>
          <!-- <small>Ocean Conservancy</small> -->
        </div>
        <div class="col-lg-8" id="seaSlides">
          <%= image_tag 'ocean-plastic.jpg', :class => "seaSlides" %>
          <%= image_tag 'sealNet.jpg', :class => "seaSlides" %>
          <%= image_tag 'bird-plastics.jpg', :class => "seaSlides" %>
          <%= image_tag 'turtle-net.jpg', :class => "seaSlides" %>
          <%= image_tag 'dolphinPlastic.jpg', :class => "seaSlides" %>

        </div>
        <div class="col-2">
          <h5>Marine litter harms over <strong>600</strong> marine species</h5><br>
          <h5><strong>15%</strong> of species affected by ingestion and entanglement from marine litter are endangered</h5>
      </div>
      </div>
  </div>
  </section>

  <section class="smallSect" id="facts3">


  </section>

  <section id="pacificGB">
    <div class="container">
      <div class="row">
        <div class="col-4">
        <h4>The Pacific Garbage Patch</h4>
        <p>An accumulation of plastics, fishing lines, and other marine and land debris.</p>
        <p>The debris concentrates in various regions of the North Pacific, not just in one area.</p>
        <p>The exact size, content, and location of the "garbage patches" are difficult to accurately predict.</p>
      </div>
      <div class="col-8" id="pgpMap">
        <%= image_tag 'pgp.jpg'%>


      </div>
    </div>
  </div>

  </section>

  <section class="bg-white" id="pollutionNews">
    <!-- <div id="overlay"> -->

    <form class="form-inline" id="searchForm">
    <!-- <label class="sr-only" for="inlineFormInput">Search Term:</label> -->
    <h6>Search: </h6><input type="text" class="form-control mb-2 mr-sm-2 mb-sm-0" id="query" placeholder="Ocean">

      <h6>Date: </h6><input type="date" class="form-control" id="date" placeholder="date">

    <button class="btn btn-dark" id="show">Show Related News Articles</button>
  </form>

    <div class="container" id="news">

  </div>

</section>


</div>

<footer class="py-2 bg-dark fixed-bottom">
  <div class="container">
    <p class="m-0 text-center text-white">Copyright &copy; Grant Hanrahan 2018</p>
  </div>
</footer>


<script>
 // -------------------------------- Map + Air Quality ------------------
 // var map;
 function initMap(){
   // map = new google.maps.Map(document.getElementById('four'), {
   //   center: {lat: -34.397, lng: 150.644},
   //   zoom: 8
   // });
     var map = new google.maps.Map(document.getElementById('airQualityMap'),{
       center: {lat: 51.505, lng: -0.09},
       // center: new google.maps.LatLng(50, 35),
       mapTypeId: google.maps.MapTypeId.ROADMAP,
       zoom: 5
     });

     var t = new Date().getTime();
     var waqiMapOverlay = new google.maps.ImageMapType({
       getTileUrl: function(coord, zoom){
       return 'https://tiles.waqi.info/tiles/usepa-aqi/' + zoom + "/" + coord.x + "/" +  coord.y + ".png?token=<%=Rails.application.secrets.waqi_api_key%>"; //****** WAQI Token ******
     },
     name: "Air Quality",
   });

   map.overlayMapTypes.insertAt(0,waqiMapOverlay);
 }

// --------------------- ESRI Ocean Temp -----------------------------

// require([
//   "esri/Map",
//   "esri/views/MapView",
//   "dojo/domReady!"
// ], function(Map, MapView){
//   var map = new Map({
//     basemap: "streets"
//   });
//   var view = new MapView({
//     container: "oceanTemp",  // Reference to the scene div created in step 5
//     map: map,  // Reference to the map object created before the scene
//     zoom: 4,  // Sets zoom level based on level of detail (LOD)
//     center: [15, 65]  // Sets center point of view using longitude,latitude
//   });
// });
require([
      "esri/Map",
      "esri/views/MapView",
      "esri/layers/ImageryLayer",
      "esri/layers/support/RasterFunction",
      "esri/layers/support/DimensionalDefinition",
      "esri/layers/support/MosaicRule",
      "esri/core/watchUtils",
      "dojo/domReady!"
    ], function(
      Map, MapView, ImageryLayer,
      RasterFunction, DimensionalDefinition, MosaicRule, watchUtils
    ) {

      // The URL to an image layer representing sea temperature
      var url =
        "https://sampleserver6.arcgisonline.com/arcgis/rest/services/ScientificData/SeaTemperature/ImageServer";

      var map = new Map({
        basemap: "dark-gray"
      });

      var view = new MapView({
        container: "oceanTemp",
        map: map,
        zoom: 3,
        center: [-32, 28],
        popup: {
          actions: []
        },
      });

      view.on("mouse-wheel", function(evt){
        // prevents zooming with the mouse-wheel event
        evt.stopPropagation();
      });

      var dimInfo = []; // Define dimensional definition as array

      // Multidimensional information of image service can be viewed at thisService/multiDimensionalInfo
      // DEPTH: show only temperatures at sea surface
      dimInfo.push(new DimensionalDefinition({
        dimensionName: "StdZ", // Water depth
        values: [0], // Sea surface or 0ft
        isSlice: true
      }));
      // TIME: only show temperatures for the week of April 7, 2014
      dimInfo.push(new DimensionalDefinition({
        dimensionName: "StdTime", // time temp was recorded
        values: [1396828800000], // Week of April 7, 2014
        isSlice: true
      }));

      var mr = new MosaicRule({
        multidimensionalDefinition: dimInfo
      });

      var rf = new RasterFunction({
        functionName: "None"
      });

      function colorize(pixelData) {
        var pixelBlock, factor, minValue, maxValue;

        if (pixelData === null || pixelData.pixelBlock === null ||
          pixelData.pixelBlock.pixels === null) {
          return;
        }

        // The pixelBlock stores the values of all pixels visible in the view
        pixelBlock = pixelData.pixelBlock;

        // Get the min and max values of the data in the current view
        minValue = pixelBlock.statistics[0].minValue;
        maxValue = pixelBlock.statistics[0].maxValue;

        // The pixels visible in the view
        var pixels = pixelBlock.pixels;

        // The number of pixels in the pixelBlock
        var numPixels = pixelBlock.width * pixelBlock.height;

        // Calculate the factor by which to determine the red and blue
        // values in the colorized version of the layer
        factor = 255.0 / (maxValue - minValue);

        // Get the pixels containing temperature values in the only band of the data
        var tempBand = pixels[0];

        // Create empty arrays for each of the RGB bands to set on the pixelBlock
        var rBand = [];
        var gBand = [];
        var bBand = [];

        // Loop through all the pixels in the view
        for (i = 0; i < numPixels; i++) {
          // Get the pixel value (the temperature) recorded at the pixel location
          var tempValue = tempBand[i];
          // Calculate the red value based on the factor
          var red = (tempValue - minValue) * factor;

          // Sets a color between blue (coldest) and red (warmest) in each band
          rBand[i] = red;
          gBand[i] = 0;
          bBand[i] = 255 - red;
        }

        // Set the new pixel values on the pixelBlock
        pixelData.pixelBlock.pixels = [rBand, gBand, bBand];
        pixelData.pixelBlock.pixelType = "U8"; // U8 is used for color
      }

      var layer = new ImageryLayer({
        url: url,
        renderingRule: rf,
        pixelFilter: colorize,
        mosaicRule: mr,
        // The popup will display the temperature at the clicked location
        popupTemplate: { // autocasts as new PopupTemplate()
          title: "Sea Surface Temperature",
          content: "{Raster.ServicePixelValue}Â° Celsius"
        }
      });

      // Add sea temperature layer to the map
      map.add(layer);
  });


// ---------------- News API ------------------------------------------

$('#show').on('click', function(e){
  e.preventDefault();
  let searchTerm = $('#query').val();
  let searchDate = $('#date').val();
  console.log('clicked');
  $('#news').empty();

  $.ajax({
    url: "https://newsapi.org/v2/everything?q=pollution&"+searchTerm+"from="+searchDate+"&sortBy=popularity&apiKey=<%=Rails.application.secrets.news_api_key%>", //***** News API Key ******
    data: {
      q: searchTerm,
      d: searchDate
    }
  }).done(function(data){

    for(let i = 0; i < data.articles.length; i++){
      article = data.articles[i]
      let image = article.urlToImage;
      let title = article.title;
      let url = article.url;
      console.log(article, image)
      divAppend = '<span id="span'+ i +'" />'
      let $newsResults = $(divAppend).append("<br><img class=articleImage src="+image+"></img>").attr('href', url);
      // let $newsResults = $(divAppend).append("<br><a href="+url+"><img src="+image+"></img></a");
      // let $newsResults = $(divAppend).append("<br><a href="+url+"><img src="+image+"></img></a>");
      $newsResults.on('click', function(){
        window.open(url, '_blank')
      })

      $newsResults.on('hover', function(){
        console.log('image hover')
      })

      $('#news').append($newsResults);

      console.log(divAppend)
      }
    })
  .fail(function(err){
    console.log('failed');
  });
}); // #show onClick

// --------------------- CSS SlideShow ----------------------
var slideIndex = 0;
carousel();

function carousel() {
    var i;
    var x = document.getElementsByClassName("seaSlides");
    for (i = 0; i < x.length; i++) {
      x[i].style.display = "none";
    }
    slideIndex++;
    if (slideIndex > x.length) {slideIndex = 1}
    x[slideIndex-1].style.display = "block";
    setTimeout(carousel, 4000); // Change image every 2 seconds
}

// ----------------------- PGP Google Map ------------------------
var oceanGarbage ={
  pgp: {
    center: {lat: 31.727, lng: -135},
    label: 'Eastern Garbage Patch'
  },
  wgp:{
    center: {lat: 25.401, lng: 147},
    label: 'Western Garbage Patch'
  }
}

// function initMap2(){
//
//   var map = new google.maps.Map(document.getElementById('pgpMap'), {
//     center: {lat: 14.623, lng: 179},
//     zoom: 3
//    });
//
//   for (var patch in oceanGarbage){
//   var marker = new google.maps.Circle({
//     strokeColor: '#FF0000',
//     strokeOpacity: 0.8,
//     strokeWeight: 2,
//     fillColor: '#FF0000',
//     fillOpacity: 0.35,
//     map: map,
//     center: oceanGarbage[patch].center,
//     radius: 500000
//     });
//   }
//
//   var description = "<h4>Convergence Zone</h4>";
//
//   var infowindow = new google.maps.InfoWindow({
//    content: description
//    });
//
//   var convergenceZone = new google.maps.Rectangle({
//     strokeColor: '#FF0000',
//     strokeOpacity: 0.8,
//     strokeWeight: 2,
//     fillColor: '#FF0000',
//     fillOpacity: 0.20,
//     map: map,
//     bounds: new google.maps.LatLngBounds(
//     new google.maps.LatLng(41.389, 167.828),
//     new google.maps.LatLng(35.223, -163.380)
//     )
//   });
//
//   convergenceZone.addListener('click', function() {
//    infowindow.open(map, convergenceZone);
//  });
//
//  };

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%=Rails.application.secrets.google_api_key%>&callback=initMap"async defer> //******** google maps api key *******
</script>

<!-- <script src="https://maps.googleapis.com/maps/api/js?key=API&callback=initMap2"async defer> //******** google maps api key *******
</script> -->
